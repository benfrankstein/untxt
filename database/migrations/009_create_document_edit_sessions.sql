-- Migration: Create document_edit_sessions table for aggregated session tracking
-- Created: 2025-10-22
-- Purpose: Track edit sessions with aggregated auto-save metrics instead of logging every auto-save

-- =====================================================
-- TABLE: document_edit_sessions
-- Tracks each editing session with aggregated metrics
-- =====================================================
CREATE TABLE IF NOT EXISTS document_edit_sessions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    task_id UUID NOT NULL REFERENCES tasks(id) ON DELETE CASCADE,
    user_id UUID NOT NULL REFERENCES users(id),
    username TEXT NOT NULL,

    -- Session identification
    session_id TEXT NOT NULL UNIQUE, -- frontend-generated session ID
    draft_id UUID REFERENCES document_versions(id) ON DELETE SET NULL,

    -- Session lifecycle
    started_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    last_activity_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ended_at TIMESTAMP WITH TIME ZONE,

    -- Aggregated auto-save metrics
    autosave_count INTEGER DEFAULT 0,
    total_characters_changed INTEGER DEFAULT 0,
    total_words_changed INTEGER DEFAULT 0,

    -- Session outcome
    outcome TEXT, -- 'published', 'cancelled', 'abandoned', NULL (still active)
    published_version_id UUID REFERENCES document_versions(id) ON DELETE SET NULL,

    -- Audit trail
    ip_address INET,
    user_agent TEXT,

    -- Compliance
    access_reason TEXT, -- 'owner', 'admin', 'shared_access'

    -- Additional metadata
    metadata JSONB,

    -- Timestamps
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- =====================================================
-- INDEXES
-- =====================================================

CREATE INDEX idx_document_edit_sessions_task_id ON document_edit_sessions(task_id);
CREATE INDEX idx_document_edit_sessions_user_id ON document_edit_sessions(user_id);
CREATE INDEX idx_document_edit_sessions_started_at ON document_edit_sessions(started_at DESC);
CREATE INDEX idx_document_edit_sessions_ended_at ON document_edit_sessions(ended_at DESC);
CREATE INDEX idx_document_edit_sessions_outcome ON document_edit_sessions(outcome);
CREATE INDEX idx_document_edit_sessions_session_id ON document_edit_sessions(session_id);

-- Index for finding active sessions
CREATE INDEX idx_document_edit_sessions_active
ON document_edit_sessions(user_id, task_id)
WHERE ended_at IS NULL;

-- =====================================================
-- ADD autosave_count TO document_versions
-- =====================================================

ALTER TABLE document_versions
ADD COLUMN IF NOT EXISTS autosave_count INTEGER DEFAULT 0;

COMMENT ON COLUMN document_versions.autosave_count IS
'Number of times this draft was auto-saved (only for drafts)';

-- =====================================================
-- TRIGGER: Update session last_activity_at
-- =====================================================

CREATE OR REPLACE FUNCTION update_session_activity()
RETURNS TRIGGER AS $$
BEGIN
    NEW.last_activity_at := CURRENT_TIMESTAMP;
    NEW.updated_at := CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_session_activity
    BEFORE UPDATE ON document_edit_sessions
    FOR EACH ROW
    EXECUTE FUNCTION update_session_activity();

-- =====================================================
-- GRANTS
-- =====================================================

GRANT SELECT, INSERT, UPDATE ON document_edit_sessions TO ocr_platform_user;

-- =====================================================
-- COMMENTS
-- =====================================================

COMMENT ON TABLE document_edit_sessions IS
'Tracks editing sessions with aggregated auto-save metrics. One row per edit session instead of one row per auto-save.';

COMMENT ON COLUMN document_edit_sessions.session_id IS
'Unique session identifier generated by frontend: {userId}_{taskId}_{timestamp}';

COMMENT ON COLUMN document_edit_sessions.autosave_count IS
'Number of auto-saves during this session';

COMMENT ON COLUMN document_edit_sessions.outcome IS
'Final outcome of session: published (saved as version), cancelled (discarded), abandoned (timed out), NULL (active)';

-- =====================================================
-- EXAMPLE USAGE
-- =====================================================

-- Session lifecycle:
-- 1. User clicks "Edit" → INSERT new session (outcome=NULL, autosave_count=0)
-- 2. User types → UPDATE autosave_count++ every 3 seconds
-- 3. User clicks "Publish" → UPDATE outcome='published', ended_at=NOW()
-- 4. Or clicks "Cancel" → UPDATE outcome='cancelled', ended_at=NOW()

-- Query active sessions:
-- SELECT * FROM document_edit_sessions WHERE ended_at IS NULL;

-- Query user's edit history:
-- SELECT * FROM document_edit_sessions WHERE user_id = ? ORDER BY started_at DESC;

-- Query sessions for a document:
-- SELECT * FROM document_edit_sessions WHERE task_id = ? ORDER BY started_at DESC;
